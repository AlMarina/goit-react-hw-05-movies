{"version":3,"file":"static/js/692.f8fd2f64.chunk.js","mappings":"2MACA,EAA+B,kCAA/B,EAA0H,iC,SC+B1H,EA3BoB,SAAHA,GAAmB,IAAbC,EAAKD,EAALC,MACfC,GAAWC,EAAAA,EAAAA,MACjB,OACEC,EAAAA,EAAAA,KAAAC,EAAAA,SAAA,CAAAC,SACGL,EAAMM,KAAI,SAAAC,GAAA,IAAGC,EAAKD,EAALC,MAAOC,EAAEF,EAAFE,GAAIC,EAAWH,EAAXG,YAAW,OAClCP,EAAAA,EAAAA,KAAA,MAAaQ,UAAWC,EAAiBP,UACvCQ,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAACC,MAAO,CAAEC,KAAMf,GAAYgB,GAAE,WAAAC,OAAaT,GAAKJ,SAAA,EACnDF,EAAAA,EAAAA,KAAA,OAEEgB,IACET,EAAW,mCAAAQ,OAC4BR,GACnCU,EAAAA,GAENC,IAAKb,EACLc,MAAO,IACPC,QAAQ,UAGVpB,EAAAA,EAAAA,KAAA,KAAGQ,UAAWC,EAAgBP,SAAEG,QAd3BC,EAgBJ,KAIb,EC7BA,EAA6B,+BCEhBe,EAAa,SAAHzB,GAAmB,IAAbC,EAAKD,EAALC,MAC3B,OACEG,EAAAA,EAAAA,KAAA,MAAIQ,UAAWC,EAAeP,UAC5BF,EAAAA,EAAAA,KAACsB,EAAW,CAACzB,MAAOA,KAG1B,C,uJCRA,EAA6B,6BAA7B,EAAsE,4B,kBCsDtE,EA/CiB,WACf,IAAA0B,GAA4CC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjDI,EAAcF,EAAA,GAAEG,EAAiBH,EAAA,GACxCI,GAAkCL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA1CE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GA6B9B,OA1BAG,EAAAA,EAAAA,YAAU,WACoB,SAAAC,IAqB3B,OArB2BA,GAAAC,EAAAA,EAAAA,GAAAC,IAAAA,MAA5B,SAAAC,IAAA,IAAAC,EAAAC,EAAA,OAAAH,IAAAA,MAAA,SAAAI,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAGuB,OAHvBF,EAAAC,KAAA,EAGIT,GAAa,GAAMQ,EAAAE,KAAA,GACOC,EAAAA,EAAAA,GAAiB,uBAAuB,KAAD,EAAAL,EAAAE,EAAAI,KAAzDL,EAAOD,EAAPC,QAERX,EAAkBW,GAClBC,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAK,GAAAL,EAAA,SAEAM,QAAQC,IAAIP,EAAAK,GAAMG,SAClBC,EAAAA,GAAAA,MAAY,+BAAgC,CAC1CC,MAAO,CACLC,OAAQ,oBACRC,QAAS,OACTC,MAAO,UACPC,WAAY,OAEb,QAEiB,OAFjBd,EAAAC,KAAA,GAEHT,GAAa,GAAOQ,EAAAe,OAAA,6BAAAf,EAAAgB,OAAA,GAAAnB,EAAA,yBAEvBoB,MAAA,KAAAC,UAAA,EAtBc,WACaxB,EAAAuB,MAAC,KAADC,UAAA,CAsB5BC,EACF,GAAG,KAGDjD,EAAAA,EAAAA,MAAA,OAAAR,SAAA,CACGyB,IACCjB,EAAAA,EAAAA,MAAA,OAAAR,SAAA,EACEQ,EAAAA,EAAAA,MAAA,MAAIF,UAAWC,EAAeP,SAAA,CAAC,mBACdF,EAAAA,EAAAA,KAAC4D,EAAAA,IAAa,CAACpD,UAAWC,OAE1CsB,IAAa/B,EAAAA,EAAAA,KAAC6D,EAAAA,EAAM,KACrB7D,EAAAA,EAAAA,KAACqB,EAAAA,EAAU,CAACxB,MAAO8B,QAGvB3B,EAAAA,EAAAA,KAAC8D,EAAAA,GAAO,MAGd,C","sources":["webpack://goit-react-hw-05-movies/./src/components/MoviesItems/MoviesItems.module.css?17a0","components/MoviesItems/MoviesItems.jsx","webpack://goit-react-hw-05-movies/./src/components/MoviesList/MoviesList.module.css?de3d","components/MoviesList/MoviesList.jsx","webpack://goit-react-hw-05-movies/./src/pages/HomePage.module.css?fc1d","pages/HomePage.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"items_movies\":\"MoviesItems_items_movies__GpECa\",\"img_movie\":\"MoviesItems_img_movie__TdsNN\",\"title_movie\":\"MoviesItems_title_movie__uT5VU\"};","import React from 'react';\nimport { Link, useLocation } from 'react-router-dom';\nimport imgDefault from 'imgDefault';\nimport css from './MoviesItems.module.css';\n\nconst MoviesItems = ({ items }) => {\n  const location = useLocation();\n  return (\n    <>\n      {items.map(({ title, id, poster_path }) => (\n        <li key={id} className={css.items_movies}>\n          <Link state={{ from: location }} to={`/movies/${id}`}>\n            <img\n              // className={css.img_movie}\n              src={\n                poster_path\n                  ? `https://image.tmdb.org/t/p/w500/${poster_path}`\n                  : imgDefault\n              }\n              alt={title}\n              width={300}\n              loading=\"lazy\"\n            />\n\n            <p className={css.title_movie}>{title}</p>\n          </Link>\n        </li>\n      ))}\n    </>\n  );\n};\n\nexport default MoviesItems;\n","// extracted by mini-css-extract-plugin\nexport default {\"list_movie\":\"MoviesList_list_movie__cQdss\"};","import MoviesItems from 'components/MoviesItems/MoviesItems';\nimport css from './MoviesList.module.css';\n\nexport const MoviesList = ({ items }) => {\n  return (\n    <ul className={css.list_movie}>\n      <MoviesItems items={items}></MoviesItems>\n    </ul>\n  );\n};\n","// extracted by mini-css-extract-plugin\nexport default {\"title_home\":\"HomePage_title_home__Ify50\",\"icon_home\":\"HomePage_icon_home__HVLKa\"};","import React, { useEffect, useState } from 'react';\nimport toast, { Toaster } from 'react-hot-toast';\nimport { fetchGetTranding } from 'api';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\nimport Loader from 'components/Loader/Loader';\nimport css from './HomePage.module.css';\nimport { MdLocalMovies } from 'react-icons/md';\n\nconst HomePage = () => {\n  const [trendingMovies, setTrendingMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  // const [err, setErr] = useState(false);\n\n  useEffect(() => {\n    async function fetchTranding() {\n      try {\n        // setErr(false);\n        setIsLoading(true);\n        const { results } = await fetchGetTranding('/trending/movie/day');\n\n        setTrendingMovies(results);\n        // console.log(trendingMovies);\n      } catch (error) {\n        console.log(error.massage);\n        toast.error('Ooops, there was an error...', {\n          style: {\n            border: '1px solid #713200',\n            padding: '10px',\n            color: '#713200',\n            fontWeight: 700,\n          },\n        });\n      } finally {\n        setIsLoading(false);\n      }\n    }\n    fetchTranding();\n  }, []);\n\n  return (\n    <div>\n      {trendingMovies && (\n        <div>\n          <h1 className={css.title_home}>\n            Trending Today <MdLocalMovies className={css.icon_home} />\n          </h1>\n          {isLoading && <Loader />}\n          <MoviesList items={trendingMovies} />\n        </div>\n      )}\n      <Toaster />\n    </div>\n  );\n};\n\nexport default HomePage;\n"],"names":["_ref","items","location","useLocation","_jsx","_Fragment","children","map","_ref2","title","id","poster_path","className","css","_jsxs","Link","state","from","to","concat","src","imgDefault","alt","width","loading","MoviesList","MoviesItems","_useState","useState","_useState2","_slicedToArray","trendingMovies","setTrendingMovies","_useState3","_useState4","isLoading","setIsLoading","useEffect","_fetchTranding","_asyncToGenerator","_regeneratorRuntime","_callee","_yield$fetchGetTrandi","results","_context","prev","next","fetchGetTranding","sent","t0","console","log","massage","toast","style","border","padding","color","fontWeight","finish","stop","apply","arguments","fetchTranding","MdLocalMovies","Loader","Toaster"],"sourceRoot":""}